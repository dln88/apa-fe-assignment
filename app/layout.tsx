import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { Suspense } from "react";

import Header from "../components/Header";
import { MenuProvider } from "@/context";
import customizedFetch from "@/ultis/fetch";

import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function MenuData() {
  const response = await customizedFetch("/en/config");
  return response;
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Suspense fallback={<Header />}>
          <MenuDataProvider>
            <Header />
            {children}
          </MenuDataProvider>
        </Suspense>
      </body>
    </html>
  );
}

async function MenuDataProvider({ children }: { children: React.ReactNode }) {
  const data = await MenuData();
  return (
    <MenuProvider
      initialData={{
        ...data.menu,
        gamesOfTheMonth: data.gamesOfTheMonth,
      }}
    >
      {children}
    </MenuProvider>
  );
}
